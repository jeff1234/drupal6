<?php
require_once("anai_chphotlist.inc");


/**
 * @file
 * ANAI
 *
 * ANAI Cloud computing main module
 *
 */



/**
 * Implementation of hook_init().
 * 
 */



/**
 * Implementation of hook_cron().
 * 
 */



/**
 * Implementation of hook_user().
 * 
 */



/**
 * Implementation of hook_perm().
 * 
 */
function anai_chphotlist_perm() {
  return array(// Hotlist
	       'anai chp list hotlist',
	       // Rules
	       'anai chp add rules',
	       'anai chp list rules',
	       'anai chp edit rules',
	       'anai chp delete rules',
	       );
}



/**
 * Implementation of hook_theme().
 * 
 */
function anai_chphotlist_theme($existing, $type, $theme, $path) {
  return array
    ('chphotlist_table' =>
     array('arguments' => array('fieldset' => NULL)),
     'chphotlist_rules_table' =>
     array('arguments' => array('fieldset' => NULL)),
     );
}



/**
 * Implementation of hook_menu().
 * 
 */
function anai_chphotlist_menu() {
  $items = array();
  $items['chphotlist'] = array
    ('page callback' => 'drupal_get_form',
     'page arguments' => array('chphotlist_form'),
     'access arguments' => array('anai chp list hotlist'),
     'type' => MENU_CALLBACK,
     );
  $items['chphotlistrules'] = array
    ('page callback' => 'drupal_get_form',
     'page arguments' => array('chphotlist_rules_form'),
     'access arguments' => array('anai chp list rules'),
     'type' => MENU_CALLBACK,
     );
  $items['chphotlistrulesadd'] = array
    ('page callback' => 'drupal_get_form',
     'page arguments' => array('chphotlist_rules_add_form'),
     'access arguments' => array('anai chp add rules'),
     'type' => MENU_CALLBACK,
     );
  $items['chphotlistrulesopt'] = array
    ('page callback' => 'drupal_get_form',
     'page arguments' => array('chphotlist_rules_option_form'),
     'access arguments' => array('anai chp edit rules'),
     'type' => MENU_CALLBACK,
     );
 return $items;
}



/**********
 ********** Hotlist
 ********** Address: chphotlist
 ********** Access:  'anai chp list hotlist'
 *********/

function chphotlist_form($form_state) {
  drupal_set_title(t('Hotlist'));

  global $user;
  $form = array();
  ahah_helper_register($form, $form_state);

  $settings = array();
  $settings['tag'] = 'ajax';
  $settings['show_companies'] = TRUE;
  $settings['buttons']['back']['submit'] = 'chphotlist_form_submit_back';
  $settings['buttons']['options']['submit'] = 'chphotlist_form_submit_options';
  if (chpprop_produce_header(&$form, &$form_state, $settings)) {
    return $form;
  }
  $company_id = $form_state['storage']['ajax']['CompanyId'];

  $entries = array();

  // Enforcement
  /* $rule = chphotlist_get_enforcement($company_id); */
  /* if (isset($rule['Tickets']) and $rule['Tickets']) { */
  /* } */

  // LPR occupancy
  $rule = chphotlist_get_lpr($company_id);
  if (isset($rule['NonCompliant']) and $rule['NonCompliant']) {
    foreach (chdboccu_get_all_hotlist($company_id) as $occu) {
      $time = chpuser_datetime_utc_to_usertimezone($entry['AllValidationTime']);
      $entries[$occu['LPN']] = array('LPN' => $occu['LPN'],
				     'HotTime' => $time->format("M j,y H:i:s"),
				     'Reason' => t('Non-compliant parker'),
				     'Source' => 'Lot');
    }
  }

  // Rules
  $lpns = array();
  foreach (chphotlist_get_rules($company_id) as $rule) {
    $lpns[] = $rule['LPN'];
  }
  foreach (chdboccu_get_hotlist_lpn($company_id, $lpns) as $occu) {
    $time = chpuser_datetime_utc_to_usertimezone($entry['AllInTime']);
    $entries[$occu['LPN']] = array('LPN' => $occu['LPN'],
				   'HotTime' => $time->format("M j,y H:i:s"),
				   'Reason' => t('Hotlisted vehicle'),
				   'Source' => 'Lot');
  }

  if (empty($entries)) {
    $form['ajax']['list'] = array('#value' => t('Empty.'));
  } else {
    $form['ajax']['list'] = chphotlist_table_form($entries);
  }

  return $form;
}

function chphotlist_form_submit_back($form, &$form_state) {
  unset($form_state['storage']);
  $form_state['redirect'] = 'front_page';
}

function chphotlist_form_submit_options($form, &$form_state) {
  unset($form_state['storage']);
  $form_state['redirect'] = 'chphotlistrules';
}

function chphotlist_table_form($entries) {
  global $user;
  $form['db'] = array('#type' => 'markup', '#theme' => 'chphotlist_table');

  $looper = 0;
  foreach ($entries as $entry) {
    $form['db']['lpn_'.$looper] = array('#value' => decode_entities($entry['LPN']));
    $form['db']['time_'.$looper] = array('#value' => decode_entities($entry['HotTime']));
    $form['db']['reason_'.$looper] = array('#value' => decode_entities($entry['Reason']));
    $form['db']['source_'.$looper] = array('#value' => decode_entities($entry['Source']));
    $looper++;
  }
  return $form;
}

function theme_chphotlist_table($form) {
  $header = array(t('LPN'), t('Hot Time'), t('Reason'), t('Found at'));
  $rows = array();
  foreach ($form as $key => $value) {
    if (!strstr($key, 'lpn_')) {
      continue;
    }
    $looper = substr($key, strlen('lpn_'));
    $rows[] = array(drupal_render($form['lpn_'.$looper]),
                    drupal_render($form['time_'.$looper]),
                    drupal_render($form['reason_'.$looper]),
                    drupal_render($form['source_'.$looper]),
                    );
  }
  return theme_table($header, $rows);
}



/**********
 ********** Rules add
 ********** Address: chphotlistrulesadd
 ********** Access:  'anai chp add rules'
 *********/



function chphotlist_rules_add_form($form_state) {
  drupal_set_title(t('Add rule'));

  global $user;
  $form = array();
  ahah_helper_register($form, $form_state);

  $settings = array();
  $settings['tag'] = 'ajax';
  $settings['show_companies'] = TRUE;
  if (chpprop_produce_header(&$form, &$form_state, $settings)) {
    return $form;
  }
  $company_id = $form_state['storage']['ajax']['CompanyId'];

  $settings = array();
  $settings['tag'] = 'ajax';
  if (chpprop_produce_vehicle(&$form, &$form_state, $settings)) {
    return $form;
  }

  // Javascript date pickers
  drupal_add_js
    ('(function ($) {
          Drupal.behaviors.ANAIchphotlist=function(context){
      	    $("#edit-ajax-StartTime:not(.StartTime-processed)",
              context).addClass("StartTime-processed")
              .AnyTime_picker({format:"%Y-%m-%d %H:%i:%s",hideInput:true,
                              placement:"inline",askSecond:false,
                              labelTitle:"Start Date and Time"});
      	    $("#edit-ajax-StopTime:not(.StopTime-processed)",
              context).addClass("StopTime-processed")
              .AnyTime_picker({format:"%Y-%m-%d %H:%i:%s",hideInput:true,
                              placement:"inline",askSecond:false,
                              labelTitle:"Stop Date and Time"});
          };
       }(jQuery));', 'inline');

  if (!isset($form_state['storage']['ajax']['StartTime'])) {
    $now = chpuser_datetime_utc_to_usertimezone('now');
    $form_state['storage']['ajax']['StartTime'] = $now->format("Y-m-d H:i:s");
  }
  $form['ajax']['StartTime'] =
    array('#type' => 'textfield',
	  '#default_value' => $form_state['storage']['ajax']['StartTime']);

  if (!isset($form_state['storage']['ajax']['Forever'])) {
    $form_state['storage']['ajax']['Forever'] = TRUE;
  }
  $form['ajax']['Forever'] =
    array('#type' => 'checkbox',
	  '#title' => t('Rule active indefinite time'),
	  '#default_value' => $form_state['storage']['ajax']['Forever'],
	  '#ahah' => array('event' => 'change',
			   'path' => ahah_helper_path(array('ajax')),
			   'wrapper' => 'ajax-wrapper'));

  if (!$form_state['storage']['ajax']['Forever']) {
    if (!isset($form_state['storage']['ajax']['StopTime'])) {
      $now = chpuser_datetime_utc_to_usertimezone('now');
      $form_state['storage']['ajax']['StopTime'] = $now->format("Y-m-d H:i:s");
    }
    $form['ajax']['StopTime'] =
      array('#type' => 'textfield',
	    '#default_value' => $form_state['storage']['ajax']['StopTime']);
  }

  $form['ajax']['save'] =
    array('#type' => 'image_button',
	  '#src' => drupal_get_path('module', 'anai').'/save.png',
	  '#validate' => array('chphotlist_rules_add_form_validate_save'),
	  '#submit' => array('chphotlist_rules_add_form_submit_save'));

  $form['ajax']['back'] =
    array('#type' => 'image_button',
	  '#src' => drupal_get_path('module', 'anai').'/cancel.png',
	  '#submit' => array('chphotlist_rules_add_form_submit_cancel'));
  return $form;
}

function chphotlist_rules_add_form_validate_save($form, &$form_state) {
  if (isset($form_state['values']['ajax']['LPN']) and
      empty($form_state['values']['ajax']['LPN'])) {
    form_set_error('ajax][LPN', 'License Plate Number field is required.');
    return;
  }
  if (isset($form_state['values']['ajax']['Make']) and
      empty($form_state['values']['ajax']['Make'])) {
    form_set_error('ajax][Make', 'Make field is required.');
    return;
  }
  if (isset($form_state['values']['ajax']['Model']) and
      empty($form_state['values']['ajax']['Model'])) {
    form_set_error('ajax][Model', 'Model field is required.');
    return;
  }
  if (isset($form_state['values']['ajax']['Color']) and
      empty($form_state['values']['ajax']['Color'])) {
    form_set_error('ajax][Color', 'Color field is required.');
    return;
  }
}

function chphotlist_rules_add_form_submit_cancel($form, &$form_state) {
  unset($form_state['storage']);
  $form_state['redirect'] = 'chphotlistrules';
}

function chphotlist_rules_add_form_submit_save($form, &$form_state) {
  global $user;
  $company_id = $form_state['values']['ajax']['CompanyId'];

  $lpn = $form_state['values']['ajax']['LPN'];
  $make = $form_state['values']['ajax']['Make'];
  $model = $form_state['values']['ajax']['Model'];
  $color = $form_state['values']['ajax']['Color'];

  $start_time = $form_state['values']['ajax']['StartTime'];
  $forever = $form_state['storage']['ajax']['Forever'];
  if ($forever) {
    $stop_time = NULL;
  } else {
    $stop_time = $form_state['storage']['ajax']['StopTime'];
  }

  if (chphotlist_insert_rule
      ($user->uid,
       $company_id,
       $lpn,
       $make,
       $model,
       $color,
       $start_time,
       $forever,
       $stop_time,
       $id)) {
    drupal_set_message('Could not insert rule', 'error');
    return;
  }

  unset($form_state['storage']);
  $form_state['redirect'] = 'chphotlistrules';
}



/**********
 ********** Rules options
 ********** Address: chphotlistrulesopt
 ********** Access:  'anai chp edit rules'
 *********/



function chphotlist_rules_option_form($form_state) {
  drupal_set_title(t('Rule options'));

  global $user;
  $form = array();
  ahah_helper_register($form, $form_state);

  $settings = array();
  $settings['tag'] = 'ajax';
  $settings['show_companies'] = TRUE;
  if (chpprop_produce_header(&$form, &$form_state, $settings)) {
    return $form;
  }
  $company_id = $form_state['storage']['ajax']['CompanyId'];

  // Enforcement
  $form['ajax']['enforcement'] =
    array('#type' => 'fieldset', '#title' => t('Enforcement rules'));
  if (!isset($form_state['storage']['ajax']['enforcement']['tickets'])) {
    $rule = chphotlist_get_enforcement($company_id);
    if (!empty($rule)) {
      $form_state['storage']['ajax']['enforcement']['tickets'] = $rule['Tickets'];
    } else {
      $form_state['storage']['ajax']['enforcement']['tickets'] = FALSE;
    }
  }
  $form['ajax']['enforcement']['tickets'] =
    array('#type' => 'checkbox',
	  '#title' => t('Inlcude vehicles with open tickets'),
	  '#default_value' => $form_state['storage']['ajax']['enforcement']['tickets']);

  // LPR
  $rule = chphotlist_get_lpr($company_id);
  $form['ajax']['lpr'] =
    array('#type' => 'fieldset', '#title' => t('License Plate Recognition rules'));
  if (!isset($form_state['storage']['ajax']['lpr']['noncompliant'])) {
    if (!empty($rule)) {
      $form_state['storage']['ajax']['lpr']['noncompliant'] = $rule['NonCompliant'];
    } else {
      $form_state['storage']['ajax']['lpr']['noncompliant'] = FALSE;
    }
  }
  $form['ajax']['lpr']['noncompliant'] =
    array('#type' => 'checkbox',
	  '#title' => t('Inlcude non-compliant vehicles'),
	  '#default_value' => $form_state['storage']['ajax']['lpr']['noncompliant']);

  $form['ajax']['save'] =
    array('#type' => 'image_button',
	  '#src' => drupal_get_path('module', 'anai').'/save.png',
	  '#validate' => array('chphotlist_rules_add_form_validate_save'),
	  '#submit' => array('chphotlist_rules_option_form_submit_save'));

  $form['ajax']['cancel'] =
    array('#type' => 'image_button',
	  '#src' => drupal_get_path('module', 'anai').'/cancel.png',
	  '#submit' => array('chphotlist_rules_option_form_submit_cancel'));

  return $form;
}

function chphotlist_rules_option_form_submit_cancel($form, &$form_state) {
  unset($form_state['storage']);
  $form_state['redirect'] = 'chphotlistrules';
}

function chphotlist_rules_option_form_submit_save($form, &$form_state) {
  $company_id = $form_state['values']['ajax']['CompanyId'];

  $tickets = $form_state['values']['ajax']['enforcement']['tickets'];

  $rule = chphotlist_get_enforcement($company_id);
  if (empty($rule)) {
    if (chphotlist_insert_enforcement
	($company_id,
	 $tickets,
	 $id)) {
      drupal_set_message('Could not insert enforcement rule', 'error');
      return;
    }
  } else {
    if (chphotlist_update_enforcement
	($company_id,
	 $tickets)) {
      drupal_set_message('Could not update enforcement rule', 'error');
      return;
    }
  }

  $noncomp = $form_state['values']['ajax']['lpr']['noncompliant'];

  $rule = chphotlist_get_lpr($company_id);
  if (empty($rule)) {
    if (chphotlist_insert_lpr
	($company_id,
	 $noncomp,
	 $id)) {
      drupal_set_message('Could not insert lpr rule', 'error');
      return;
    }
  } else {
    if (chphotlist_update_lpr
	($company_id,
	 $noncomp)) {
      drupal_set_message('Could not update lpr rule', 'error');
      return;
    }
  }

  unset($form_state['storage']);
  $form_state['redirect'] = 'chphotlistrules';
}



/**********
 ********** Rules list
 ********** Address: chphotlistrules
 ********** Access:  'anai chp list rules'
 *********/



function chphotlist_rules_form($form_state) {
  if ($form_state['storage']['detailed_edit']) {
    return chphotlist_rules_edit_form($form_state);
  }

  drupal_set_title(t('Rules'));

  global $user;
  $form = array();
  ahah_helper_register($form, $form_state);

  $settings = array();
  $settings['tag'] = 'ajax';
  $settings['show_companies'] = TRUE;
  $settings['buttons']['back']['submit'] = 'chphotlist_rules_form_submit_back';
  if (user_access('anai chp add rules')) {
    $settings['buttons']['add']['submit'] = 'chphotlist_rules_form_submit_add';
  }
  if (user_access('anai chp edit rules')) {
    $settings['buttons']['options']['submit'] = 'chphotlist_rules_form_submit_options';
  }
  if (chpprop_produce_header(&$form, &$form_state, $settings)) {
    return $form;
  }
  $company_id = $form_state['storage']['ajax']['CompanyId'];

  // Enforcement
  $form['ajax']['enforcement'] =
    array('#type' => 'fieldset', '#title' => t('Enforcement rules'));
  $rule = chphotlist_get_enforcement($company_id);
  if (empty($rule)) {
    $rule['Tickets'] = FALSE;
  }
  $form['ajax']['enforcement']['Switch'] =
    array('#type' => 'item',
	  '#value' => t('Inlcude vehicles with open tickets: VERDICT',
			array('VERDICT' => $rule['Tickets'] ? t('Yes') : t('No'))));

  // LPR
  $form['ajax']['lpr'] =
    array('#type' => 'fieldset', '#title' => t('License Plate Recognition rules'));
  $rule = chphotlist_get_lpr($company_id);
  if (empty($rule)) {
    $rule['NonCompliant'] = FALSE;
  }
  $form['ajax']['lpr']['Switch'] =
    array('#type' => 'item',
	  '#value' => t('Inlcude non-compliant vehicles: VERDICT',
			array('VERDICT' => $rule['NonCompliant'] ? t('Yes') : t('No'))));

  // Vehiles
  $rules = chphotlist_get_rules($company_id);

  $form['ajax']['lpn'] =
    array('#type' => 'fieldset', '#title' => t('Vehicle rules'));
  if (empty($rules)) {
    $form['ajax']['lpn']['list'] = array('#value' => t('Empty.'));
  } else {
    $form['ajax']['lpn']['list'] = chphotlist_rules_table_form($rules);
  }

  return $form;
}

function chphotlist_rules_table_form($entries) {
  global $user;
  $form['db'] = array('#type' => 'markup', '#theme' => 'chphotlist_rules_table');

  if (user_access('anai chp edit rules')) {
    $readonly = FALSE;
  } else {
    $readonly = TRUE;
  }

  $looper = 0;
  foreach ($entries as $entry) {
    $form['db']['lpn_'.$looper] = array('#value' => decode_entities($entry['LPN']));
    $form['db']['make_'.$looper] = array('#value' => decode_entities($entry['Make']));
    $form['db']['model_'.$looper] = array('#value' => decode_entities($entry['Model']));
    $form['db']['color_'.$looper] = array('#value' => decode_entities($entry['Color']));

    $time = chpuser_datetime_utc_to_utc($entry['StartTime']);
    $form['db']['start_'.$looper] = array('#value' => $time->format("M j,y H:i"));

    if (empty($entry['StopTime'])) {
      $form['db']['stop_'.$looper] = array('#value' => t('Forever'));
    } else {
      $time = chpuser_datetime_utc_to_utc($entry['StopTime']);
      $form['db']['stop_'.$looper] = array('#value' => $time->format("M j,y H:i"));
    }

    if ($readonly) {
      $form['db']['edit_'.$looper] = array('#value' => '');
    } else {
      $form['db']['edit_'.$looper] =
	array('#type' => 'image_button',
	      '#src' => drupal_get_path('module', 'anai').'/editsmall.png',
	      '#name' => 'op_edit'.$entry['Id'],
	      '#submit' => array('chphotlist_rules_form_submit'));
    }
    $looper++;
  }
  return $form;
}

function theme_chphotlist_rules_table($form) {
  // Table Header
  $header = array(t('LPN'), t('Make'), t('Model'), t('Color'), t('Start'), t('Stop'), '');
  $rows = array();
  // Table Rows
  foreach ($form as $key => $value) {
    if (!strstr($key, 'lpn_')) {
      continue;
    }
    $looper = substr($key, strlen('lpn_'));
    $rows[] = array(drupal_render($form['lpn_'.$looper]),
                    drupal_render($form['make_'.$looper]),
                    drupal_render($form['model_'.$looper]),
                    drupal_render($form['color_'.$looper]),
                    drupal_render($form['start_'.$looper]),
                    drupal_render($form['stop_'.$looper]),
                    array('data' => drupal_render($form['edit_'.$looper]),
			  'width' => 1, 'height' => 1),
                    );
  }
  // Render Table
  return theme_table($header, $rows);
}

function chphotlist_rules_form_submit_back($form, &$form_state) {
  unset($form_state['storage']);
  $form_state['redirect'] = 'chphotlist';
}

function chphotlist_rules_form_submit_add($form, &$form_state) {
  unset($form_state['storage']);
  $form_state['redirect'] = 'chphotlistrulesadd';
}

function chphotlist_rules_form_submit_options($form, &$form_state) {
  unset($form_state['storage']);
  $form_state['redirect'] = 'chphotlistrulesopt';
}

function chphotlist_rules_edit_form($form_state) {
  if ($form_state['storage']['confirm_delete']) {
    return confirm_form
      ($form, 'Are you sure?', 'chphotlistrules',
       'The vehicle rule will be deleted from the system.');
  }

  global $user;
  $form = array();
  ahah_helper_register($form, $form_state);

  $id = $form_state['storage']['id'];
  $rule = chphotlist_get_rule_id($id);

  drupal_set_title(t('Edit rule'));

  $form['ajax'] =
    array('#prefix' => '<div id="ajax-wrapper">',
	  '#suffix' => '</div>',
	  '#tree' => TRUE);

  $settings = array();
  $settings['default']['LPN'] = decode_entities($rule['LPN']);
  $settings['default']['Make'] = decode_entities($rule['Make']);
  $settings['default']['Model'] = decode_entities($rule['Model']);
  $settings['default']['Color'] = decode_entities($rule['Color']);
  $settings['tag'] = 'ajax';
  
  if (chpprop_produce_vehicle(&$form, &$form_state, $settings)) {
    return $form;
  }

  // Javascript date pickers
  drupal_add_js
    ('(function ($) {
          Drupal.behaviors.ANAIchphotlist=function(context){
      	    $("#edit-ajax-StartTime:not(.StartTime-processed)",
              context).addClass("StartTime-processed")
              .AnyTime_picker({format:"%Y-%m-%d %H:%i:%s",hideInput:true,
                              placement:"inline",askSecond:false,
                              labelTitle:"Start Date and Time"});
      	    $("#edit-ajax-StopTime:not(.StopTime-processed)",
              context).addClass("StopTime-processed")
              .AnyTime_picker({format:"%Y-%m-%d %H:%i:%s",hideInput:true,
                              placement:"inline",askSecond:false,
                              labelTitle:"Stop Date and Time"});
          };
       }(jQuery));', 'inline');

  if (!isset($form_state['storage']['ajax']['StartTime'])) {
    $form_state['storage']['ajax']['StartTime'] = $rule['StartTime'];
  }
  $form['ajax']['StartTime'] =
    array('#type' => 'textfield',
	  '#default_value' => $form_state['storage']['ajax']['StartTime']);

  if (!isset($form_state['storage']['ajax']['Forever'])) {
    if (empty($rule['StopTime'])) {
      $form_state['storage']['ajax']['Forever'] = TRUE;
    } else {
      $form_state['storage']['ajax']['Forever'] = FALSE;
    }
  }
  $form['ajax']['Forever'] =
    array('#type' => 'checkbox',
	  '#title' => t('Rule active indefinite time'),
	  '#default_value' => $form_state['storage']['ajax']['Forever'],
	  '#ahah' => array('event' => 'change',
			   'path' => ahah_helper_path(array('ajax')),
			   'wrapper' => 'ajax-wrapper'));

  if (!$form_state['storage']['ajax']['Forever']) {
    if (!isset($form_state['storage']['ajax']['StopTime'])) {
      if (empty($rule['StopTime'])) {
	$now = chpuser_datetime_utc_to_usertimezone('now');
	$form_state['storage']['ajax']['StopTime'] = $now->format("Y-m-d H:i:s");
      } else {
	$form_state['storage']['ajax']['StopTime'] = $rule['StopTime'];
      }
    }
    $form['ajax']['StopTime'] =
      array('#type' => 'textfield',
	    '#default_value' => $form_state['storage']['ajax']['StopTime']);
  }

  $form['ajax']['save'] =
    array('#type' => 'image_button',
	  '#src' => drupal_get_path('module', 'anai').'/save.png',
	  '#validate' => array('chphotlist_rules_add_form_validate_save'),
	  '#submit' => array('chphotlist_rules_edit_form_submit_save'));

  $form['ajax']['cancel'] =
    array('#type' => 'image_button',
	  '#src' => drupal_get_path('module', 'anai').'/cancel.png',
	  '#submit' => array('chphotlist_rules_edit_form_submit_cancel'));

  if (user_access('anai chp delete rules')) {
    $form['ajax']['delete'] =
      array('#type' => 'image_button',
	    '#src' => drupal_get_path('module', 'anai').'/delete.png',
   	    '#submit' => array('chphotlist_rules_edit_form_submit_delete'));
  }
  return $form;
}

function chphotlist_rules_edit_form_submit_cancel($form, &$form_state) {
  unset($form_state['storage']);
  $form_state['redirect'] = 'chphotlistrules';
}

function chphotlist_rules_edit_form_submit_delete($form, &$form_state) {
  $form_state['storage']['confirm_delete'] = TRUE;
}

function chphotlist_rules_edit_form_submit_save($form, &$form_state) {
  $id = $form_state['storage']['id'];
  $rule = chphotlist_get_rule_id($id);

  $lpn = $form_state['values']['ajax']['LPN'];
  $make = $form_state['values']['ajax']['Make'];
  $model = $form_state['values']['ajax']['Model'];
  $color = $form_state['values']['ajax']['Color'];

  $start_time = $form_state['values']['ajax']['StartTime'];
  $forever = $form_state['storage']['ajax']['Forever'];
  if ($forever) {
    $stop_time = NULL;
  } else {
    $stop_time = $form_state['storage']['ajax']['StopTime'];
  }

  if (chphotlist_insert_rule
      ($id,
       $lpn,
       $make,
       $model,
       $color,
       $start_time,
       $forever,
       $stop_time)) {
    drupal_set_message('Could not update rule', 'error');
    return;
  }

  unset($form_state['storage']);
  $form_state['redirect'] = 'chphotlist';
}

function chphotlist_rules_form_submit($form, &$form_state) {
  if ($form_state['storage']['confirm_delete']) {
    $id = $form_state['storage']['id'];
    chphotlist_delete_rule_id($id);

    unset($form_state['storage']);
    $form_state['redirect'] = 'chphotlistrules';
    return;
  }

  $id = -1;
  foreach ($form_state['values'] as $key => $value) {
    if (strstr($key, 'op_edit')) {
      $id = substr($key, strlen('op_edit'));
      break;
    }
  }
  if ($id > 0) {
    $form_state['storage']['id'] = $id;
    $form_state['storage']['detailed_edit'] = TRUE;
    return;
  }
}



